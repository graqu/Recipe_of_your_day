"use strict";var popup=document.querySelector(".recipes-popup"),addNewBtn=document.querySelector(".recipes-add-btn"),submitBtn=document.querySelector(".submit-btn"),closePopupBtn=document.querySelector(".popup-cancel"),recipesBox=document.querySelector(".recipes-box"),error=document.querySelector(".popup-error"),allInputs=document.querySelectorAll(".popup-input"),foodNameInput=document.querySelector("#food-name"),foodIngredientsInput=document.querySelector("#ingredients"),foodDescInput=document.querySelector("#food-description"),defaultFood=["spagetti","pasa,meat,sauce","cook Pasta, fry meat and mix all with sauce. Enyoy!"],defaultFood2=["Scrumbled Eggs","Eggs, butter, bread, sausage","fry Eggs and cutted sausage on butter - Eat with bread"],arrToStorage=JSON.parse(localStorage.getItem("arrayKey")),editing=!1,handlePopup=function(){popup.classList.toggle("hide")},checkInputs=function(t){return allInputs.forEach(function(e){0!==e.value.length||(t=!1)}),t},checkSubmit=function(){var e=foodNameInput.value,t=foodIngredientsInput.value,n=foodDescInput.value;checkInputs(!0)&&!editing?(handlePopup(),memoUserItem(e,t,n),createRecipe(e,t,n),clearPopupInputs(),error.classList.add("hide")):checkInputs(!0)&&editing?(handlePopup(),makeChanges(e,t,n),clearPopupInputs(),error.classList.add("hide"),editing=!1):error.classList.remove("hide")},handleExtension=function(e){var t=document.querySelector(".extended"),e=e.target.parentElement.parentElement;null!==t||e.classList.contains("extended")?null===t||e.classList.contains("extended")?e.classList.remove("extended"):(t.classList.remove("extended"),e.classList.add("extended")):e.classList.add("extended")},removeRecipe=function(e){var e=e.target.parentElement.parentElement.parentElement,t=checkNumOfItem(e);memoUserDelete(t),e.remove()},clearPopupInputs=function(){allInputs.forEach(function(e){return e.value=""})},checkNumOfItem=function(e){var t=e.parentElement;return Array.from(t.children).indexOf(e)-2},createRecipe=function(e,t,n){var r=document.createElement("div");r.classList.add("recipe-item"),r.innerHTML=' \n    <div class="recipe-item-heading">\n     <div>\n        <h3 class="recipe-name">'.concat(e,'</h3>\n        <p class="recipe-ingredients">').concat(t,'</p>\n     </div>\n        <div class="recipe-modify-icon recipe-extender" onclick="handleExtension(event)">\n           <i class="fa-solid fa-plus"></i>\n        </div>\n     </div>\n\n     <div class="recipe-introduction">\n     <div class="recipe-introduction-text">\n        <p>').concat(n,'</p>\n     </div>\n     <div class="recipe-modify-icons">\n        <div class="recipe-modify-icon recipe-editor" onclick="runEditor(event)"><i class="fa-solid fa-pen-to-square"></i>\n        </div>\n        <div class="recipe-modify-icon recipe-remover" onclick="removeRecipe(event)"><i class="fa-solid fa-trash"></i></div>\n\n    </div>'),recipesBox.appendChild(r)},runEditor=function(e){var e=e.target.parentElement.parentElement.parentElement,t=e.querySelector(".recipe-name").textContent,n=e.querySelector(".recipe-ingredients").textContent,r=e.querySelector(".recipe-introduction-text").firstElementChild.innerText;e.classList.add("element-in-edition"),foodNameInput.value=t,foodIngredientsInput.value=n,foodDescInput.value=r,editing=!0,handlePopup()},makeChanges=function(e,t,n){var r=document.querySelector(".element-in-edition"),o=r.querySelector(".recipe-name"),a=r.querySelector(".recipe-ingredients"),i=r.querySelector(".recipe-introduction-text"),c=checkNumOfItem(r);o.textContent=e,a.textContent=t,i.firstElementChild.innerText=n,r.classList.remove("element-in-edition"),memoUserChanges(c,e,t,n)},checkNewUser=function(){if(null===arrToStorage)(arrToStorage=[]).push(defaultFood),arrToStorage.push(defaultFood2),localStorage.setItem("arrayKey",JSON.stringify(arrToStorage)),createRecipe(defaultFood[0],defaultFood[1],defaultFood[2]),createRecipe(defaultFood2[0],defaultFood2[1],defaultFood2[2]);else for(var e=0;e<arrToStorage.length;e++)createRecipe(arrToStorage[e][0],arrToStorage[e][1],arrToStorage[e][2])},memoUserItem=function(e,t,n){arrToStorage.push([e,t,n]),localStorage.setItem("arrayKey",JSON.stringify(arrToStorage))},memoUserDelete=function(e){arrToStorage.splice(e,1),localStorage.setItem("arrayKey",JSON.stringify(arrToStorage))},memoUserChanges=function(e,t,n,r){arrToStorage[e]=[t,n,r],localStorage.setItem("arrayKey",JSON.stringify(arrToStorage))};addNewBtn.addEventListener("click",handlePopup),submitBtn.addEventListener("click",checkSubmit),closePopupBtn.addEventListener("click",handlePopup),checkNewUser();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
